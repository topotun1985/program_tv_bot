import logging
from datetime import datetime
from functools import partial
from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager, Dialog, Window
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Cancel, Row, Url, Button
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from database.orm_query import orm_get_programs, orm_add_to_favorites, orm_remove_from_favorites, orm_get_favorites
from database.models import User


# –°–ª–æ–≤–∞—Ä—å —Å URL –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
channel_urls = {
    "–ü–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª": "https://www.1tv.com/live",
    "–†–æ—Å—Å–∏—è 1": "https://vgtrk.ru/russiatv",
    "–ú–∞—Ç—á": "https://matchtv.ru/channel/matchtv",
    "–ù–¢–í": "https://www.ntv.ru/air/ntv",
    "–ü—è—Ç—ã–π": "https://www.5-tv.ru/live/",
    "–¢–í –¶–µ–Ω—Ç—Ä": "https://www.ntv.ru/air/tvc",
    "–ö—É–ª—å—Ç—É—Ä–∞": "https://vgtrk.ru/tvkultura",
    "–†–ï–ù –¢–í": "https://www.ntv.ru/air/rentv",
    "–û–¢–†": "https://otr-online.ru/online/",
    "–¢–ù–¢": "https://tnt-online.ru/live",
    "–°–¢–°": "https://ctc.ru/online/",
    "–î–æ–º–∞—à–Ω–∏–π": "https://domashniy.ru/online",
    "–ü—è—Ç–Ω–∏—Ü–∞": "https://friday.ru/live",
    "–¢–í-3": "https://tv3.ru/live",
    "–ú–£–ó –¢–í": "https://muz-tv.ru/online/",
    "–ö–∞—Ä—É—Å–µ–ª—å": "https://www.ntv.ru/air/carusel",
    "–ó–≤–µ–∑–¥–∞": "https://tvzvezda.ru/video",
    "–ß–µ": "https://chetv.ru/online",
    "–ú–ò–†": "https://www.ntv.ru/air/mir",
    "–°–ø–∞—Å –¢–í": "https://spastv.ru/efir/",
    "–Æ": "https://www.u-tv.ru/online/",
    "–†–æ—Å—Å–∏—è 24": "https://vgtrk.ru/russia24",
    "viju TV1000": "https://viju.ru/tv-channels/viju-tv1000/",
    "viju TV1000 —Ä—É—Å—Å–∫–æ–µ": "https://viju.ru/tv-channels/viju-tv1000-russkoe/",
    "viju TV1000 action": "https://viju.ru/tv-channels/viju-tv1000-action/",
    "viju+ Comedy": "https://viju.ru/tv-channels/vijuplus-comedy/",
    "viju+ Megahit": "https://viju.ru/tv-channels/vijuplus-megahit/",
    "viju+ Premiere": "https://viju.ru/tv-channels/vijuplus-premiere/",
    "viju+ Serial": "https://viju.ru/tv-channels/vijuplus-serial/",
    "viju Explore": "https://viju.ru/tv-channels/viju-explore/",
    "viju History": "https://viju.ru/tv-channels/viju-history/",
    "viju Nature": "https://viju.ru/tv-channels/viju-nature/",
    "–ù–∞–Ω–æ": "https://tv-nano.ru/",
    "–ú–ê–¢–ß! –§—É—Ç–±–æ–ª 3": "https://matchtv.ru/channel/futbol-3",
    "–ú–ê–¢–ß! –ë–æ–µ—Ü": "https://matchtv.ru/channel/boec",
    "–§—É—Ç–±–æ–ª": "https://football-tv.ru/live",
    "viju+ Sport": "https://viju.ru/tv-channels/vijuplus-sport/",
    "–ú–ê–¢–ß! –§—É—Ç–±–æ–ª 1": "https://matchtv.ru/channel/futbol-1",
    "–ú–ê–¢–ß! –§—É—Ç–±–æ–ª 2": "https://matchtv.ru/channel/futbol-2",
    "–ú–ê–¢–ß! –ê—Ä–µ–Ω–∞": "https://matchtv.ru/channel/arena",
    "–ú–ê–¢–ß! –ò–≥—Ä–∞": "https://matchtv.ru/channel/igra",
    "–ú–ê–¢–ß! –ü—Ä–µ–º—å–µ—Ä": "https://matchpremier.ru/live",
    "–ú–ê–¢–ß! –°—Ç—Ä–∞–Ω–∞": "https://matchtv.ru/channel/strana",
    "–°—Ç–∞—Ä—Ç –¢—Ä–∏—É–º—Ñ": "https://tvstart.ru/schedule/start-triumph/",
    "–ú–ò–† 24": "https://onair.mir24.tv/",
    "360¬∞ –ù–æ–≤–æ—Å—Ç–∏": "https://360.ru/streams/",
    "Al JaZeera": "https://www.aljazeera.com/live",
    "Ru.TV": "https://ru.tv/watch/online",
    "BRIDGE TV": "https://bridgetv.ru/",
    "SONGTV Russia": "https://songtv.ru/live",
    "Fashion TV": "https://fashiontv.ru/live",
    "–°–¢–° Love": "https://ctclove.ru/online",
    "–°—É–±–±–æ—Ç–∞!": "https://subbota.tv/"
}


async def add_new_user_if_not_exists(session: AsyncSession, user_id: str, username: str):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = await session.execute(select(User).where(User.user_id == user_id))
    user = result.scalars().first()

    if user:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ updated_at –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user.updated = datetime.now()
        session.add(user)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–±—ä–µ–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–µ—Å—Å–∏—é
        logging.info(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª–µ 'updated' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –±–∞–∑–µ
        new_user = User(user_id=user_id, username=username, created=datetime.now(), updated=datetime.now())
        session.add(new_user)
        logging.info(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}")

    # –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user}, –æ–±–Ω–æ–≤–ª—è–µ–º updated.")
    await session.commit()
    logging.info("–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


async def get_tv_program(dialog_manager: DialogManager, event_from_user, session: AsyncSession, channel_name: str, **kwargs):
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –±–∞–∑–µ
    await add_new_user_if_not_exists(session, user_id=str(event_from_user.id), username=event_from_user.username)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    res = await orm_get_programs(session, channel_name)
    if res:
        res = "\n".join([f"{row.program_time.strftime('%H:%M')} - {row.program_title}" for row in res])
    else:
        res = '–ù–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º –Ω–∞ –æ—Å—Ç–∞–≤—à—É—é—Å—è —á–∞—Å—Ç—å –¥–Ω—è.'
    return {'program_title': res}


def create_tv_channel_dialog(channel_name: str, state) -> Dialog:

    url = channel_urls.get(channel_name)  # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –∫–∞–Ω–∞–ª–∞ (None, –µ—Å–ª–∏ –Ω–µ—Ç)

    # –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º
    add_to_favorites_handler = partial(add_to_favorites, channel_name=channel_name)
    remove_from_favorites_handler = partial(remove_from_favorites, channel_name=channel_name)

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    buttons_favorites = [
        Button(Const('‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ ‚ù§Ô∏è'), id='add_to_favorites', on_click=add_to_favorites_handler, when="not_in_favorites"),
        Button(Const('‚ûñ –£–±—Ä–∞—Ç—å –∏–∑ ‚ù§Ô∏è'), id='remove_from_favorites', on_click=remove_from_favorites_handler, when="in_favorites"),
    ]

    # –ï—Å–ª–∏ –µ—Å—Ç—å URL
    if url:
        # –†—è–¥ —Å –∫–Ω–æ–ø–∫–æ–π "–°–º–æ—Ç—Ä–µ—Ç—å online" –∏ –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        buttons_top_row = [
            Url(Const('–°–º–æ—Ç—Ä–µ—Ç—å online'), url=Const(url))
        ]
        buttons_bottom_row = [
            Cancel(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id='b_cancel'),  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
            *buttons_favorites
        ]
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç URL, —Ç–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
        buttons_top_row = [
            Cancel(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id='b_cancel'),  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            *buttons_favorites,  # –ö–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ" –∏ "–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
        ]
        buttons_bottom_row = []

    return Dialog(
        Window(
            Const(f'‚≠êÔ∏è <b>–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–µ–¥–∞—á</b> ‚≠êÔ∏è\n\nüì∫ <b>{channel_name}</b>\n'),
            Format('{program_title}'),
            Row(*buttons_top_row),  # –í—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä—è–¥
            *[Row(*buttons_bottom_row)] if buttons_bottom_row else [],  # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–∏–∂–Ω–∏–π —Ä—è–¥ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å
            getter=lambda dialog_manager, event_from_user, session, **kwargs: get_tv_program_with_favorite_status(
                dialog_manager, event_from_user, session, channel_name
            ),
            state=state,
        ),
    )


# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π handler –¥–ª—è –∫–Ω–æ–ø–æ–∫
async def add_to_favorites(callback: CallbackQuery, button: Button, manager: DialogManager, channel_name: str, **kwargs):
    session = manager.middleware_data['session']
    user_id = str(callback.from_user.id)

    await orm_add_to_favorites(session, user_id, channel_name)
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –ø–µ—Ä–µ–¥–∞—á–µ–π —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    await manager.update(data={})


async def remove_from_favorites(callback: CallbackQuery, button: Button, manager: DialogManager, channel_name: str, **kwargs):
    session = manager.middleware_data['session']
    user_id = str(callback.from_user.id)

    await orm_remove_from_favorites(session, user_id, channel_name)
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –ø–µ—Ä–µ–¥–∞—á–µ–π —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    await manager.update(data={})


# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π getter –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–µ—Ä–µ–¥–∞—á –∏ —Å—Ç–∞—Ç—É—Å–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
async def get_tv_program_with_favorite_status(dialog_manager: DialogManager, event_from_user, session, channel_name: str, **kwargs):
    await add_new_user_if_not_exists(session, user_id=str(event_from_user.id), username=event_from_user.username)
    user_id = str(event_from_user.id)

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    favorites = await orm_get_favorites(session, user_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
    is_in_favorites = any(fav.channel_name == channel_name for fav in favorites)

    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–µ—Ä–µ–¥–∞—á –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞
    res = await orm_get_programs(session, channel_name)
    if res:
        res = "\n".join([f"{row.program_time.strftime('%H:%M')} - {row.program_title}" for row in res])
    else:
        res = '–ù–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º –Ω–∞ –æ—Å—Ç–∞–≤—à—É—é—Å—è —á–∞—Å—Ç—å –¥–Ω—è.'

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    return {
        'program_title': res,
        'in_favorites': is_in_favorites,  # –°—Ç–∞—Ç—É—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞
        'not_in_favorites': not is_in_favorites,  # –ü—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    }
